// Generated by CoffeeScript 2.5.1
(function() {
  var fs, http, main, path;

  fs = require('fs');

  path = require('path');

  http = require('http');

  main = function(argv) {
    var body, fullCommand, opts, req, secret, secrets, secretsFilename, user;
    opts = require('minimist')(argv, {
      string: ['u'],
      boolean: ['v'],
      alias: {
        verbose: 'v',
        user: 'u'
      }
    });
    user = opts.u;
    if (!user) {
      user = 'Anonymous';
    }
    secret = null;
    secretsFilename = path.join(path.dirname(fs.realpathSync(__filename)), '../secrets.json');
    if (fs.existsSync(secretsFilename)) {
      if (opts.verbose) {
        console.log(`Found: ${secretsFilename}`);
      }
      secrets = JSON.parse(fs.readFileSync(secretsFilename, "utf8"));
      secret = secrets.cmd;
      if (opts.verbose) {
        console.log(`Using cmd secret: ${secret}`);
      }
    }
    fullCommand = opts._.join(" ");
    if (fullCommand.length === 0) {
      console.log("Please supply a command.");
      return;
    }
    body = {
      user: user,
      cmd: fullCommand
    };
    if (secret != null) {
      body.secret = secret;
    }
    if (opts.verbose) {
      console.log(JSON.stringify(body, null, 2));
    }
    req = http.request({
      host: 'localhost',
      path: '/cmd',
      port: '3003',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    }, function(response) {
      var str;
      str = '';
      response.on('data', function(chunk) {
        return str += chunk;
      });
      return response.on('end', function() {
        return console.log(str);
      });
    });
    req.write(JSON.stringify(body));
    return req.end();
  };

  module.exports = main;

}).call(this);
